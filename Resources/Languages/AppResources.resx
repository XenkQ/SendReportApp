<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="ChoseCategoryMessage" xml:space="preserve">
    <value>Select the category that best fits your report. The categories are for illustrative purposes only, and a detailed description of your submission will be added at the end of the submission process.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="OptionalDescriptionMessage" xml:space="preserve">
    <value>(Optional) You can add a description of the report, which will help in the efficient definition of the problem and speed up its implementation. Your description cannot exceed 1000 characters.</value>
  </data>
  <data name="ClickToStartWriting" xml:space="preserve">
    <value>(click on this inscription to start writing)</value>
  </data>
  <data name="Localization" xml:space="preserve">
    <value>Localization</value>
  </data>
  <data name="LocalizationMessage" xml:space="preserve">
    <value>The application requires your location. Press the share location button and select the precise option.</value>
  </data>
  <data name="ShareLocalization" xml:space="preserve">
    <value>Share location</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="TakePhotoMessage" xml:space="preserve">
    <value>Take a photo of the incident that clearly shows what the report is about. Remember to agree to use the camera to take a photo via the application.</value>
  </data>
  <data name="TakePhoto" xml:space="preserve">
    <value>Take a photo</value>
  </data>
  <data name="TryAgain" xml:space="preserve">
    <value>Please try again</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="SendingAlert" xml:space="preserve">
    <value>Sending a report</value>
  </data>
  <data name="ReportNotSended" xml:space="preserve">
    <value>The report has not been sent!</value>
  </data>
  <data name="ReportSended" xml:space="preserve">
    <value>The report has been sent!</value>
  </data>
  <data name="CategoryNotChosen" xml:space="preserve">
    <value>No category selected!</value>
  </data>
  <data name="CategoryMessage" xml:space="preserve">
    <value>Select the category that best suits your report.</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="NoLocalization" xml:space="preserve">
    <value>We don't have your location</value>
  </data>
  <data name="LocalizationInfo" xml:space="preserve">
    <value>The location is necessary for the acceptance of report. Make sure the location has been shared by clicking the "Send Location" button and agreeing to the exact location.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="CantTakePhoto" xml:space="preserve">
    <value>Can't take a photo! Make sure the application has permission to take photos</value>
  </data>
  <data name="NoPhoto" xml:space="preserve">
    <value>No photo!</value>
  </data>
  <data name="PhotoMessage" xml:space="preserve">
    <value>Please take a photo as it is the basis for report.</value>
  </data>
  <data name="NoInternetConnection" xml:space="preserve">
    <value>No internet connection!</value>
  </data>
  <data name="NoSerwerConnection" xml:space="preserve">
    <value>No connection to the server! Please try again later.</value>
  </data>
  <data name="Wait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="CantGetLocalization" xml:space="preserve">
    <value>Unable to retrieve device location!</value>
  </data>
  <data name="LocalizationIsRequired" xml:space="preserve">
    <value>Location is necessary to confirm your report. Make sure the application has permission to access the location</value>
  </data>
  <data name="LocalizadionIsDisabled" xml:space="preserve">
    <value>Localization is disabled!</value>
  </data>
  <data name="UnsuportedErrorOccured" xml:space="preserve">
    <value>An unexpected problem has occurred!</value>
  </data>
  <data name="EnableLocalization" xml:space="preserve">
    <value>Turn on location on your device</value>
  </data>
  <data name="TryRestartApp" xml:space="preserve">
    <value>Try restarting the application</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
</root>